package QuanLy;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import qlks.CTDL.DichVu;
import qlks.CTDL.GiaDichVu;
import static qlks.QLKS.layKetNoi;

public class QuanLyDichVu extends javax.swing.JFrame {

    Connection kn = null;
    Statement st = null;

    public QuanLyDichVu() {
        initComponents();
        setTitle("QUẢN LÝ DỊCH VỤ");
        khoiTaoTB();
        hienThiDanhSachDichVu();
    }

    private void khoiTaoTB() {
        tb_maDV.setText("");
        tb_tenDV.setText("");
        tb_gia.setText("");
    }

    private void khoiTaoTF() {
        //reset
        txt_maDV.setText("");
        txt_tenDichVu.setText("");
        txt_donGia.setText("");
        txt_donGia.setEditable(true);
    }

    public ArrayList<DichVu> layDanhSachDichVu() {
        ArrayList<DichVu> dsdv = new ArrayList<DichVu>();
        Connection kn = layKetNoi();
        try {
            st = (Statement) kn.createStatement();
            String sql = "SELECT * FROM DICHVU";
            ResultSet rs = st.executeQuery(sql);
            DichVu dv;
            while (rs.next()) {
                dv = new DichVu(rs.getString("MADV"), rs.getString("TENDICHVU"));
                dsdv.add(dv);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dsdv;
    }

    public ArrayList<GiaDichVu> layDSGiaDichVu() {
        ArrayList<GiaDichVu> dsgdv = new ArrayList<GiaDichVu>();
        Connection kn = layKetNoi();
        try {
            st = (Statement) kn.createStatement();
            String sql = "SELECT MADV, GIA FROM GIADICHVU";
            ResultSet rs = st.executeQuery(sql);
            GiaDichVu gdv;
            while (rs.next()) {
                gdv = new GiaDichVu(rs.getString("MADV"), rs.getInt("GIA"));
                dsgdv.add(gdv);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dsgdv;
    }

    String layDonGia(String maDV) {
        kn = layKetNoi();
        try {
            CallableStatement c = kn.prepareCall("{call loadDG (?)}");
            c.setString(1, maDV);
            ResultSet rs = c.executeQuery();
            while (rs.next()) {
                return rs.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }

    public void hienThiDanhSachDichVu() {
        String colTieuDe1[] = new String[]{"Mã Dịch Vụ", "Tên Dịch Vụ", "Đơn giá (VNĐ)"};
        ArrayList<DichVu> dsdv = layDanhSachDichVu();
        ArrayList<GiaDichVu> dsgdv = layDSGiaDichVu();
//        DefaultTableModel model =  (DefaultTableModel) jTableDichvu.getModel();
//            model.setColumnIdentifiers(colTieuDe1);
//        Object[] row;
        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);
        Object[] row;
        for (int i = 0; i < dsdv.size(); i++) {
            row = new Object[3];
            // GÁN GIÁ TRỊ
            row[0] = dsdv.get(i).getMaDV();
            row[1] = dsdv.get(i).getTenDV();
            row[2] = layDonGia(dsdv.get(i).getMaDV());
            model.addRow(row);
        }
        jTableDichvu.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNenFrame = new javax.swing.JPanel();
        jPanelThongTinPhong = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_maDV = new javax.swing.JTextField();
        txt_tenDichVu = new javax.swing.JTextField();
        txt_donGia = new javax.swing.JTextField();
        tb_maDV = new javax.swing.JLabel();
        tb_gia = new javax.swing.JLabel();
        tb_tenDV = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanelThongTinPhong1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDichvu = new javax.swing.JTable();
        jPanelThongTinPhong2 = new javax.swing.JPanel();
        Them = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        xoa = new javax.swing.JButton();
        thoat = new javax.swing.JButton();
        capNhatGia = new javax.swing.JButton();
        datLat = new javax.swing.JButton();

        setTitle("Quản Lý Dịch Vụ");
        setBackground(new java.awt.Color(153, 153, 255));
        setResizable(false);

        jPanelNenFrame.setBackground(new java.awt.Color(102, 153, 255));
        jPanelNenFrame.setMinimumSize(new java.awt.Dimension(1200, 600));
        jPanelNenFrame.setPreferredSize(new java.awt.Dimension(950, 620));

        jPanelThongTinPhong.setBackground(new java.awt.Color(153, 204, 255));
        jPanelThongTinPhong.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Thông tin dịch vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 51))); // NOI18N
        jPanelThongTinPhong.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanelThongTinPhong.setPreferredSize(new java.awt.Dimension(560, 580));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Mã dịch vụ: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Tên dịch vụ:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Đơn giá:");

        tb_maDV.setForeground(new java.awt.Color(255, 0, 51));
        tb_maDV.setText("jLabel4");

        tb_gia.setForeground(new java.awt.Color(255, 0, 0));
        tb_gia.setText("jLabel4");

        tb_tenDV.setForeground(new java.awt.Color(255, 0, 0));
        tb_tenDV.setText("jLabel4");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/SER_TEA.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/SER_FOOD.png"))); // NOI18N

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/SER_IRON.png"))); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/SER_BUS.png"))); // NOI18N

        javax.swing.GroupLayout jPanelThongTinPhongLayout = new javax.swing.GroupLayout(jPanelThongTinPhong);
        jPanelThongTinPhong.setLayout(jPanelThongTinPhongLayout);
        jPanelThongTinPhongLayout.setHorizontalGroup(
            jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThongTinPhongLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelThongTinPhongLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb_gia)
                            .addComponent(tb_tenDV))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelThongTinPhongLayout.createSequentialGroup()
                        .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_donGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                            .addComponent(txt_tenDichVu, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelThongTinPhongLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(tb_maDV))
                            .addComponent(txt_maDV, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(32, Short.MAX_VALUE))))
            .addGroup(jPanelThongTinPhongLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addGap(40, 40, 40)
                .addComponent(jLabel10)
                .addGap(21, 21, 21))
        );
        jPanelThongTinPhongLayout.setVerticalGroup(
            jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThongTinPhongLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txt_maDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(tb_maDV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_tenDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addComponent(tb_tenDV)
                .addGap(5, 5, 5)
                .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_donGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThongTinPhongLayout.createSequentialGroup()
                        .addComponent(tb_gia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(jPanelThongTinPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThongTinPhongLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelThongTinPhongLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThongTinPhongLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addContainerGap())))
        );

        jPanelThongTinPhong1.setBackground(new java.awt.Color(153, 204, 255));
        jPanelThongTinPhong1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Danh sách dịch vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 51))); // NOI18N
        jPanelThongTinPhong1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanelThongTinPhong1.setPreferredSize(new java.awt.Dimension(560, 580));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/SER_247.png"))); // NOI18N

        jTableDichvu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDichvu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDichvuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableDichvu);
        if (jTableDichvu.getColumnModel().getColumnCount() > 0) {
            jTableDichvu.getColumnModel().getColumn(0).setMinWidth(100);
            jTableDichvu.getColumnModel().getColumn(0).setPreferredWidth(500);
            jTableDichvu.getColumnModel().getColumn(0).setMaxWidth(100);
            jTableDichvu.getColumnModel().getColumn(1).setMinWidth(200);
            jTableDichvu.getColumnModel().getColumn(1).setPreferredWidth(500);
            jTableDichvu.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanelThongTinPhong1Layout = new javax.swing.GroupLayout(jPanelThongTinPhong1);
        jPanelThongTinPhong1.setLayout(jPanelThongTinPhong1Layout);
        jPanelThongTinPhong1Layout.setHorizontalGroup(
            jPanelThongTinPhong1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThongTinPhong1Layout.createSequentialGroup()
                .addContainerGap(369, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(20, 20, 20))
            .addGroup(jPanelThongTinPhong1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );
        jPanelThongTinPhong1Layout.setVerticalGroup(
            jPanelThongTinPhong1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThongTinPhong1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(557, 557, 557))
        );

        jPanelThongTinPhong2.setBackground(new java.awt.Color(153, 204, 255));
        jPanelThongTinPhong2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Hành động", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 51))); // NOI18N
        jPanelThongTinPhong2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanelThongTinPhong2.setPreferredSize(new java.awt.Dimension(560, 580));

        Them.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/THEM.png"))); // NOI18N
        Them.setText("THÊM");
        Them.setToolTipText("Click để thêm dịch vụ!");
        Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemActionPerformed(evt);
            }
        });

        sua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/SUA.png"))); // NOI18N
        sua.setText("SỬA");
        sua.setToolTipText("Click để sửa tên dịch vụ!");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });

        xoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/DELETE1.png"))); // NOI18N
        xoa.setText("XÓA");
        xoa.setToolTipText("Click để xóa dịch vụ");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });

        thoat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        thoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/EXIT.png"))); // NOI18N
        thoat.setText("THOÁT");
        thoat.setToolTipText("Click để xóa quản lí tiện nghi!");
        thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatActionPerformed(evt);
            }
        });

        capNhatGia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        capNhatGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/UPDATE.png"))); // NOI18N
        capNhatGia.setText("CẬP NHÂT GIÁ");
        capNhatGia.setToolTipText("Click để cập nhật giá!");
        capNhatGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capNhatGiaActionPerformed(evt);
            }
        });

        datLat.setBackground(new java.awt.Color(153, 204, 255));
        datLat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        datLat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/hinh/RESET.png"))); // NOI18N
        datLat.setToolTipText("Click để reset thông tin nhập.");
        datLat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datLat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datLatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelThongTinPhong2Layout = new javax.swing.GroupLayout(jPanelThongTinPhong2);
        jPanelThongTinPhong2.setLayout(jPanelThongTinPhong2Layout);
        jPanelThongTinPhong2Layout.setHorizontalGroup(
            jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThongTinPhong2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelThongTinPhong2Layout.createSequentialGroup()
                        .addComponent(Them, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sua, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))
                    .addGroup(jPanelThongTinPhong2Layout.createSequentialGroup()
                        .addComponent(capNhatGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(datLat, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))))
        );
        jPanelThongTinPhong2Layout.setVerticalGroup(
            jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThongTinPhong2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Them, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sua, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelThongTinPhong2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanelThongTinPhong2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(capNhatGia, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThongTinPhong2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(datLat, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanelNenFrameLayout = new javax.swing.GroupLayout(jPanelNenFrame);
        jPanelNenFrame.setLayout(jPanelNenFrameLayout);
        jPanelNenFrameLayout.setHorizontalGroup(
            jPanelNenFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNenFrameLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelNenFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelThongTinPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelThongTinPhong2, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelThongTinPhong1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelNenFrameLayout.setVerticalGroup(
            jPanelNenFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNenFrameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelNenFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelNenFrameLayout.createSequentialGroup()
                        .addComponent(jPanelThongTinPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelThongTinPhong2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelThongTinPhong1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelNenFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelNenFrame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean checkMaDV(String maDV) {
        boolean kt = true;
        if (maDV.equals("") == true) {
            tb_maDV.setText("Mã dịch vụ không được để trống!");
            return false;
        } else {
            String mau = "[A-Za-z0-9]{1,10}";
            if (maDV.matches(mau) == false) {
                tb_maDV.setText("Mã dịch vụ không hợp lệ!");
                return false;
            }
        }
        try {
            Connection ketNoi = qlks.QLKS.layKetNoi();
            PreparedStatement ps = ketNoi.prepareStatement("select * from DICHVU where MADV = '" + maDV + "'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                kt = false;
            }
            rs.close();
            ps.close();
            ketNoi.close();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
        tb_maDV.setText("");
        if (kt == false) {
            tb_maDV.setText("Mã dịch vụ đã tồn tại!");
        }
        return kt;
    }

    private boolean checkTenDichVu(String tenDV) {
        if (tenDV.equals("") == true) {
            tb_tenDV.setText("Tên dịch vụ không được để trống!");
            return false;
        } else {
            String mau = "^\\p{L}+[\\p{L}\\p{Z}\\p{P}]{1,20}";
            if (tenDV.matches(mau) == false) {
                tb_tenDV.setText("Tên dịch vụ không hợp lệ!");
                return false;
            }
        }
        tb_tenDV.setText("");
        return true;
    }

    private boolean checkGia(String donGia) {
        String temp;
        boolean kt = true;
        String pattern = "^[0-9]+$";
        if (donGia.equals("")) {
            tb_gia.setText("Đơn giá không được để trống!");
            return false;
        } else {
            if (!donGia.matches(pattern)) {
                tb_gia.setText("Đơn giá không hợp lệ!");
                return false;
            } else {
                tb_gia.setText("");
            }
        }

        return kt;
    }
//    private void them(String maDV, String tenDV){
//        Connection ketNoi = qlks.QLKS.layKetNoi();
//        try{
//            PreparedStatement ps = ketNoi.prepareStatement("INSERT INTO DICHVU VALUES (?,?)");
//            ps.setString(1, maDV);
//            ps.setString(2, tenDV);
//            ps.executeUpdate();
//        }
//        catch(SQLException ex){
//            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    private void them(String maDV, String tenDV, String gia) {
        // TODO add your handling code here:

        Connection kn = qlks.QLKS.layKetNoi();
        String SQL = "INSERT INTO DICHVU VALUES('" + txt_maDV.getText() + "',N'" + txt_tenDichVu.getText() + "') "
                + "INSERT INTO GIADICHVU VALUES ('" + txt_maDV.getText() + "',CURRENT_TIMESTAMP," + Integer.parseInt(txt_donGia.getText()) + ") ";
        try {
            PreparedStatement ps = kn.prepareStatement(SQL);
            ps.execute();
            hienThiDanhSachDichVu();
        } catch (SQLException ex) {
        }
    }
    private void ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemActionPerformed
        // TODO add your handling code here:
        Boolean kt = true;
        String maDV = txt_maDV.getText();
        String tenDV = txt_tenDichVu.getText();
        String gia = txt_donGia.getText();
        if (checkMaDV(maDV) == false) {
            kt = false;
        }
        if (checkTenDichVu(tenDV) == false) {
            kt = false;
        }
        if (checkGia(gia) == false) {
            kt = false;
        }
        if (kt == true) {
            them(maDV, tenDV, gia);
            layDanhSachDichVu();
            hienThiDanhSachDichVu();
            khoiTaoTF();
            khoiTaoTB();
            JOptionPane.showMessageDialog(this, "Thêm dịch vụ thành công!");
        }

    }//GEN-LAST:event_ThemActionPerformed
    private void sua(String maDV, String tenDV) {
        Connection kn = qlks.QLKS.layKetNoi();
        try {
            PreparedStatement ps = kn.prepareStatement("UPDATE DICHVU SET TENDICHVU = ? WHERE MADV = ?");
            ps.setString(2, maDV);
            ps.setString(1, tenDV);
            ps.executeUpdate();
            ps.close();
            kn.close();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
        // TODO add your handling code here:
        Boolean kt = true;
        String maDV = txt_maDV.getText();
        String tenDV = txt_tenDichVu.getText();
        String gia = txt_donGia.getText();
        txt_maDV.setEditable(false);
        if (checkTenDichVu(tenDV) == false) {
            kt = false;
        }

        if (kt == true) {
            sua(maDV, tenDV);
            layDanhSachDichVu();
            hienThiDanhSachDichVu();
            khoiTaoTF();
            khoiTaoTB();
            txt_maDV.setEditable(true);
            JOptionPane.showMessageDialog(this, "Sửa dịch vụ thành công!");
        }
    }//GEN-LAST:event_suaActionPerformed
    //xét điều kiện xóa
    private void xoa(String maDV) {
        Connection kn = qlks.QLKS.layKetNoi();
        String sql1 = "delete from GIADICHVU where MADV = ?";
        try {
            PreparedStatement ps = kn.prepareStatement(sql1);
            ps.setString(1, maDV);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sql = "delete from DICHVU where MADV = ?";
        try {
            PreparedStatement ps = kn.prepareStatement(sql);
            ps.setString(1, maDV);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean kiemTraDichVu(String maDV) {
        String temp;
        boolean kt = false;
        String maDVu = txt_maDV.getText();
        Connection kn = qlks.QLKS.layKetNoi();
        if (maDV.equals("") == true) {
            //JOptionPane.showMessageDialog(this, "Mã dịch vụ không được để trống!");
            if (checkMaDV(maDVu) == false) {
                kt = false;
            }
        } else {
            try {
                PreparedStatement ps = kn.prepareStatement("select * from DICHVU");
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    temp = rs.getString("MADV");
                    if (temp.equals(maDV) == true) {
                        kt = true;
                        break;
                    }
                }
                rs.close();
                ps.close();
                kn.close();
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (kt == false) {
                JOptionPane.showMessageDialog(this, "Dịch vụ này không tồn tại!");
            } else {
                try {
                    kn = qlks.QLKS.layKetNoi();
                    PreparedStatement ps = kn.prepareStatement("select * from CT_DICHVU where MADV = '" + maDV + "'");
                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        kt = false;
                    }
                    rs.close();
                    ps.close();
                    kn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (kt == false) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa dịch vụ này!");
                }
            }
        }
        return kt;
    }
    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        // TODO add your handling code here:
        String maDV = txt_maDV.getText();
        String tenDV = txt_tenDichVu.getText();
        String gia = txt_donGia.getText();
        boolean kt = true;
        kt = kiemTraDichVu(maDV);
        if (kt == true) {
            //xoa.setToolTipText("Click để xóa dịch vụ ");
            int selected = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa dịch"
                    + " vụ này không", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
            if (selected == JOptionPane.YES_NO_OPTION) {
                xoa(maDV);
                layDanhSachDichVu();
                hienThiDanhSachDichVu();
                khoiTaoTF();
                khoiTaoTB();
                txt_maDV.setEditable(false);
                txt_tenDichVu.setEditable(false);
                txt_donGia.setEditable(false);
                JOptionPane.showMessageDialog(this, "Xóa dịch vụ thành công!");
            }
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void thoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatActionPerformed
        // TODO add your handling code here:
        //thoat.setToolTipText("Click để thoát quản lí dịch vụ ");
        int selected = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát chương"
                + " trình không", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
        if (selected == JOptionPane.YES_NO_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_thoatActionPerformed

    private void capNhatGia(String maDV, String donGia) {
        Connection kn = qlks.QLKS.layKetNoi();
        try {
            //PreparedStatement ps = kn.prepareStatement("INSERT GIADICHVU SET GIA = ? WHERE MADV = ?");
            PreparedStatement ps = kn.prepareStatement("INSERT INTO GIADICHVU VALUES (?,GETDATE(),?)");
            ps.setString(1, maDV);
            ps.setString(2, donGia);
            ps.executeUpdate();
            ps.close();
            kn.close();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void capNhatGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capNhatGiaActionPerformed
        Boolean kt = true;
        String maDV = txt_maDV.getText();
        String tenDV = txt_tenDichVu.getText();
        String gia = txt_donGia.getText();
        //if(checkMaDV(maDV) == false) kt = false;
        txt_maDV.setEditable(false);
        txt_tenDichVu.setEditable(false);
        if (checkGia(gia) == false) {
            kt = false;
        }
        if (kt == true) {
            capNhatGia(maDV, gia);
            them(maDV, tenDV, gia);
            layDanhSachDichVu();
            hienThiDanhSachDichVu();
            khoiTaoTF();
            khoiTaoTB();
            txt_maDV.setEditable(true);
            txt_tenDichVu.setEditable(true);
            JOptionPane.showMessageDialog(this, "Cập nhật giá thành công!");
        }
    }//GEN-LAST:event_capNhatGiaActionPerformed

    private void jTableDichvuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDichvuMouseClicked
        // TODO add your handling code here:
        int i = jTableDichvu.getSelectedRow();
        TableModel model = jTableDichvu.getModel();
        txt_maDV.setText(model.getValueAt(i, 0).toString());
        txt_tenDichVu.setText(model.getValueAt(i, 1).toString());
        txt_donGia.setText(model.getValueAt(i, 2).toString());
    }//GEN-LAST:event_jTableDichvuMouseClicked

    private void datLatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datLatActionPerformed
        // TODO add your handling code here:
        khoiTaoTF();
        khoiTaoTB();
        txt_maDV.setEditable(true);
        txt_tenDichVu.setEditable(true);
    }//GEN-LAST:event_datLatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyDichVu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Them;
    private javax.swing.JButton capNhatGia;
    private javax.swing.JButton datLat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanelNenFrame;
    private javax.swing.JPanel jPanelThongTinPhong;
    private javax.swing.JPanel jPanelThongTinPhong1;
    private javax.swing.JPanel jPanelThongTinPhong2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDichvu;
    private javax.swing.JButton sua;
    private javax.swing.JLabel tb_gia;
    private javax.swing.JLabel tb_maDV;
    private javax.swing.JLabel tb_tenDV;
    private javax.swing.JButton thoat;
    private javax.swing.JTextField txt_donGia;
    private javax.swing.JTextField txt_maDV;
    private javax.swing.JTextField txt_tenDichVu;
    private javax.swing.JButton xoa;
    // End of variables declaration//GEN-END:variables
}
